#!/bin/sh

### BEGIN INIT INFO
# Provides:		celeryd
# Required-Start:	
# Required-Stop:	
# Default-Start:	2 3 4 5
# Default-Stop:		1
# Short-Description:	celery task worker daemon
### END INIT INFO

set -e

CELERYD_PID_FILE="/var/run/celeryd.pid"
CELERYD_LOG_FILE="/var/log/celeryd.log"
CELERYD_LOG_LEVEL="INFO"
DEFAULT_CELERYD="celeryd"

# /etc/init.d/ssh: start and stop the celery task worker daemon.

if test -f /etc/default/celeryd; then
    . /etc/default/celeryd
fi

export CELERY_LOADER

. /lib/lsb/init-functions

CELERYD_OPTS="$CELERYD_OPTS -f $CELERYD_LOG_FILE -l $CELERYD_LOG_LEVEL"

if [ -n "$2" ]; then
    CELERYD_OPTS="$CELERYD_OPTS $2"
fi

# Extra start-stop-daemon options, like user/group.
if [ -n "$CELERYD_USER" ]; then
    DAEMON_OPTS="$DAEMON_OPTS --chuid $CELERYD_USER"
fi
if [ -n "$CELERYD_GROUP" ]; then
    DAEMON_OPTS="$DAEMON_OPTS --group $CELERYD_GROUP"
fi


# Are we running from init?
run_by_init() {
    ([ "$previous" ] && [ "$runlevel" ]) || [ "$runlevel" = S ]
}


check_dev_null() {
    if [ ! -c /dev/null ]; then
	if [ "$1" = log_end_msg ]; then
	    log_end_msg 1 || true
	fi
	if ! run_by_init; then
	    log_action_msg "/dev/null is not a character device!"
	fi
	exit 1
    fi
}


export PATH="${PATH:+$PATH:}/usr/sbin:/sbin"
if [ ! -z "$VIRTUALENV" ]; then
    export PATH="$VIRTUALENV/bin:$PATH"
    CELERYD="$VIRTUALENV/bin/$CELERYD"
fi


if [ -f "$CELERYD" -a ! -x "$CELERYD" ]; then
    echo "ERROR: $CELERYD is not executable."
    echo "Please make it executable by doing: chmod +x '$CELERYD'"

    echo "celeryd is disabled"
    exit
fi


case "$1" in
  start)
    check_dev_null
    log_daemon_msg "Starting celery task worker server" "celeryd"
    if start-stop-daemon --start $DAEMON_OPTS --quiet --oknodo --background --make-pidfile --pidfile $CELERYD_PID_FILE --exec $CELERYD -- $CELERYD_OPTS; then
        log_end_msg 0
    else
        log_end_msg 1
    fi
    ;;
  stop)
    log_daemon_msg "Stopping celery task worker server" "celeryd"
    if start-stop-daemon --stop --quiet --oknodo --pidfile $CELERYD_PID_FILE; then log_end_msg 0
    else
        log_end_msg 1
    fi
    ;;

  reload|force-reload)
    echo "Use start+stop"
    ;;

  restart)
    log_daemon_msg "Restarting celery task worker server" "celeryd"
    start-stop-daemon --stop --quiet --oknodo --retry 30 --pidfile $CELERYD_PID_FILE
    check_dev_null log_end_msg
    if start-stop-daemon --start $DAEMON_OPTS --quiet --oknodo --background --make-pidfile --pidfile $CELERYD_PID_FILE --exec $CELERYD -- $CELERYD_OPTS; then log_end_msg 0
    else
        log_end_msg 1
    fi
    ;;

  try-restart)
    log_daemon_msg "Restarting celery task worker server" "celeryd"
    set +e
    start-stop-daemon --stop --quiet --retry 30 --pidfile $CELERYD_PID_FILE
    RET="$?"
    set -e
    case $RET in
        0)
		# old daemon stopped
		check_dev_null log_end_msg
		if start-stop-daemon --start $DAEMON_OPTS --quiet --oknodo --background --make-pidfile --pidfile $CELERYD_PID_FILE --exec $CELERYD -- $CELERYD_OPTS; then
		    log_end_msg 0
		else
		    log_end_msg 1
		fi
		;;
	    1)
		# daemon not running
		log_progress_msg "(not running)"
		log_end_msg 0
		;;
	    *)
		# failed to stop
		log_progress_msg "(failed to stop)"
		log_end_msg 1
		;;
	esac
	;;

  status)
	status_of_proc -p $CELERYD_PID_FILE $CELERYD celeryd && exit 0 || exit $?
	;;

  *)
	log_action_msg "Usage: /etc/init.d/celeryd {start|stop|force-reload|restart|try-restart|status}"
	exit 1
esac

exit 0
